spring:
  data:
    redis:
      host: my-cache-server
      port: 6379
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://my-db:3306/mydb
    username: root
    password:

  jpa:
    open-in-view: true
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      use-new-id-generator-mappings: false
    show-sql: true
    properties:
      hibernate.format_sql: true
      dialect: org.hibernate.dialect.MySQL8InnoDBDialect

  security:
    oauth2:
      client:
        registration:
          google:
            clientId: ${{ secrets.SECURITY_OAUTH2_CLIENT_ID }}
            clientSecret: ${{ secrets.SECURITY_OAUTH2_CLIENT_PASSWORD }}

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${{ secrets.SMTP_USERNAME }}
    password: ${{ secrets.SMTP_PASSWORD }}
    properties:
      mail.smtp.auth: true
      mail.smtp.starttls.enable: true
      mail.smtp.starttls.required: true
      mail.smtp.connectiontimeout: 5000
      mail.smtp.timeout: 5000
      mail.smtp.writetimeout: 5000
    auth-code-expiration-millis: 600000

logging:
  level:
    com:
      amazonaws:
        util:
          EC2MetadataUtils: error
    org.hibernate.SQL: debug

mail:
  address:
    admin: tlsalswns0o@naver.com

jwt:
  key: ${{ secrets.JWT_KEY }}
  access-token-expiration-minutes: 30
  refresh-token-expiration-minutes: 420

email:
  super-code: ${{ secrets.SUPER_CODE }}

cloud:
  aws:
    s3:
      bucket: togedog-image
    credentials:
      accessKey: ${{ secrets.S3_ACCESS_KEY }}
      secretKey: ${{ secrets.S3_SECRET_KEY }}
    region:
      static: ap-northeast-2
    stack:
      auto: false

kakao:
  api:
    key: ${{ secrets.KAKAO_API_KEY}}